{"ast":null,"code":"export function configureFakeBackend() {\n  let users = [{\n    \"firstName\": \"edessociales.andrearendon@gmail.com\",\n    \"id\": 1,\n    \"lastName\": \"edessociales.andrearendon@gmail.com\",\n    \"password\": \"db3w2xjooxvp\",\n    \"username\": \"edessociales.andrearendon@gmail.com\"\n  }, {\n    \"firstName\": \"canalesespecializados@gmail.com\",\n    \"id\": 2,\n    \"lastName\": \"canalesespecializados@gmail.com\",\n    \"password\": \"ylm5niqcr7cb\",\n    \"username\": \"canalesespecializados@gmail.com\"\n  }, {\n    \"firstName\": \"andrea_rendon@bantrab.net.gt\",\n    \"id\": 3,\n    \"lastName\": \"andrea_rendon@bantrab.net.gt\",\n    \"password\": \"r7cbdb3w2xss\",\n    \"username\": \"andrea_rendon@bantrab.net.gt\"\n  }, {\n    \"firstName\": \"maria_cermeno@bantrab.net.gt\",\n    \"id\": 4,\n    \"lastName\": \"maria_cermeno@bantrab.net.gt\",\n    \"password\": \"zesiutllh8tg\",\n    \"username\": \"maria_cermeno@bantrab.net.gt\"\n  }, {\n    \"firstName\": \"tatiana_meneses@bantrab.net.gt\",\n    \"id\": 5,\n    \"lastName\": \"tatiana_meneses@bantrab.net.gt\",\n    \"password\": \"1kfwvb3ex9pu\",\n    \"username\": \"tatiana_meneses@bantrab.net.gt\"\n  }, {\n    \"firstName\": \"omgadmin\",\n    \"id\": 6,\n    \"lastName\": \"omgadmin\",\n    \"password\": \"omgadmin\",\n    \"username\": \"omgadmin\"\n  }, {\n    \"user\": \"wendy_santacruz@bantrab.net.gt\",\n    \"password\": \"ven6fnbq\",\n    \"firstName\": \"wendy\",\n    \"id\": 7,\n    \"lastName\": \"wendy\"\n  }];\n  let realFetch = window.fetch;\n\n  window.fetch = function (url, opts) {\n    const isLoggedIn = 'Bearer fake-jwt-token';\n    return new Promise((resolve, reject) => {\n      // wrap in timeout to simulate server api call\n      setTimeout(() => {\n        // authenticate - public\n        if (url.endsWith('/users/authenticate') && opts.method === 'POST') {\n          const params = JSON.parse(opts.body);\n          const user = users.find(x => x.username === params.username && x.password === params.password);\n          if (!user) return error('Error de Accesos');\n          return ok({\n            id: user.id,\n            username: user.username,\n            firstName: user.firstName,\n            lastName: user.lastName,\n            token: 'fake-jwt-token'\n          });\n        } // get users - secure\n\n\n        if (url.endsWith('/users') && opts.method === 'GET') {\n          if (!isLoggedIn) return unauthorised();\n          return ok(users);\n        } // pass through any requests not handled above\n\n\n        realFetch(url, opts).then(response => resolve(response)); // private helper functions\n\n        function ok(body) {\n          resolve({\n            ok: true,\n            text: () => Promise.resolve(JSON.stringify(body))\n          });\n        }\n\n        function unauthorised() {\n          resolve({\n            status: 401,\n            text: () => Promise.resolve(JSON.stringify({\n              message: 'Unauthorised'\n            }))\n          });\n        }\n\n        function error(message) {\n          resolve({\n            status: 400,\n            text: () => Promise.resolve(JSON.stringify({\n              message\n            }))\n          });\n        }\n      }, 500);\n    });\n  };\n}","map":{"version":3,"sources":["C:/xampp/htdocs/react/login/src/_helpers/fake-backend.js"],"names":["configureFakeBackend","users","realFetch","window","fetch","url","opts","isLoggedIn","Promise","resolve","reject","setTimeout","endsWith","method","params","JSON","parse","body","user","find","x","username","password","error","ok","id","firstName","lastName","token","unauthorised","then","response","text","stringify","status","message"],"mappings":"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","sourcesContent":["\n\nexport function configureFakeBackend() {\n    \n    let users =[\n        {\n          \"firstName\": \"edessociales.andrearendon@gmail.com\",\n          \"id\": 1,\n          \"lastName\": \"edessociales.andrearendon@gmail.com\",\n          \"password\": \"db3w2xjooxvp\",\n          \"username\": \"edessociales.andrearendon@gmail.com\"\n        },\n        {\n          \"firstName\": \"canalesespecializados@gmail.com\",\n          \"id\": 2,\n          \"lastName\": \"canalesespecializados@gmail.com\",\n          \"password\": \"ylm5niqcr7cb\",\n          \"username\": \"canalesespecializados@gmail.com\"\n        },\n        {\n          \"firstName\": \"andrea_rendon@bantrab.net.gt\",\n          \"id\": 3,\n          \"lastName\": \"andrea_rendon@bantrab.net.gt\",\n          \"password\": \"r7cbdb3w2xss\",\n          \"username\": \"andrea_rendon@bantrab.net.gt\"\n        },\n        {\n          \"firstName\": \"maria_cermeno@bantrab.net.gt\",\n          \"id\": 4,\n          \"lastName\": \"maria_cermeno@bantrab.net.gt\",\n          \"password\": \"zesiutllh8tg\",\n          \"username\": \"maria_cermeno@bantrab.net.gt\"\n        },\n        {\n          \"firstName\": \"tatiana_meneses@bantrab.net.gt\",\n          \"id\": 5,\n          \"lastName\": \"tatiana_meneses@bantrab.net.gt\",\n          \"password\": \"1kfwvb3ex9pu\",\n          \"username\": \"tatiana_meneses@bantrab.net.gt\"\n        },\n        {\n          \"firstName\": \"omgadmin\",\n          \"id\": 6,\n          \"lastName\": \"omgadmin\",\n          \"password\": \"omgadmin\",\n          \"username\": \"omgadmin\"\n        },\n        { \"user\":\"wendy_santacruz@bantrab.net.gt\",\n        \"password\":\"ven6fnbq\",\n        \"firstName\": \"wendy\",\n        \"id\": 7,\n        \"lastName\": \"wendy\",\n           } \n      ];\n\n\n\n    let realFetch = window.fetch;\n    window.fetch = function (url, opts) {\n        const isLoggedIn = 'Bearer fake-jwt-token';\n        return new Promise((resolve, reject) => {\n            // wrap in timeout to simulate server api call\n            setTimeout(() => {  \n                // authenticate - public\n                if (url.endsWith('/users/authenticate') && opts.method === 'POST') {\n                    const params = JSON.parse(opts.body);\n                    const user = users.find(x => x.username === params.username && x.password === params.password);\n                    if (!user) return error('Error de Accesos');\n                    return ok({\n                        id: user.id,\n                        username: user.username,\n                        firstName: user.firstName,\n                        lastName: user.lastName,\n                        token: 'fake-jwt-token'\n                    });\n                }\n                // get users - secure\n                if (url.endsWith('/users') && opts.method === 'GET') {\n                    if (!isLoggedIn) return unauthorised();\n                    return ok(users);\n                }\n\n                // pass through any requests not handled above\n                realFetch(url, opts).then(response => resolve(response));\n\n                // private helper functions\n\n                function ok(body) {\n                    resolve({ ok: true, text: () => Promise.resolve(JSON.stringify(body)) })\n                }\n\n                function unauthorised() {\n                    resolve({ status: 401, text: () => Promise.resolve(JSON.stringify({ message: 'Unauthorised' })) })\n                }\n\n                function error(message) {\n                    resolve({ status: 400, text: () => Promise.resolve(JSON.stringify({ message })) })\n                }\n            }, 500);\n        });\n    }\n}"]},"metadata":{},"sourceType":"module"}