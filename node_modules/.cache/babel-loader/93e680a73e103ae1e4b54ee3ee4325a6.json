{"ast":null,"code":"import{BehaviorSubject}from'rxjs';import{handleResponse}from'../_helpers';var currentUserSubject=new BehaviorSubject(JSON.parse(localStorage.getItem('currentUser')));export var authenticationService={login:login,logout:logout,currentUser:currentUserSubject.asObservable(),get currentUserValue(){return currentUserSubject.value;}};function login(username,password){var requestOptions={method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({username:username,password:password})};return fetch(\"/users/authenticate\",requestOptions).then(handleResponse).then(function(user){// store user details and jwt token in local storage to keep user logged in between page refreshes\nlocalStorage.setItem('currentUser',JSON.stringify(user));currentUserSubject.next(user);return user;});}function logout(){// remove user from local storage to log user out\nlocalStorage.removeItem('currentUser');currentUserSubject.next(null);}","map":{"version":3,"sources":["C:/xampp/htdocs/react/login/src/_services/authentication.service.js"],"names":["BehaviorSubject","handleResponse","currentUserSubject","JSON","parse","localStorage","getItem","authenticationService","login","logout","currentUser","asObservable","currentUserValue","value","username","password","requestOptions","method","headers","body","stringify","fetch","then","user","setItem","next","removeItem"],"mappings":"AAAA,OAASA,eAAT,KAAgC,MAAhC,CAGA,OAASC,cAAT,KAA+B,aAA/B,CAEA,GAAMC,CAAAA,kBAAkB,CAAG,GAAIF,CAAAA,eAAJ,CAAoBG,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAX,CAApB,CAA3B,CAEA,MAAO,IAAMC,CAAAA,qBAAqB,CAAG,CACjCC,KAAK,CAALA,KADiC,CAEjCC,MAAM,CAANA,MAFiC,CAGjCC,WAAW,CAAER,kBAAkB,CAACS,YAAnB,EAHoB,CAIjC,GAAIC,CAAAA,gBAAJ,EAAwB,CAAE,MAAOV,CAAAA,kBAAkB,CAACW,KAA1B,CAAiC,CAJ1B,CAA9B,CAOP,QAASL,CAAAA,KAAT,CAAeM,QAAf,CAAyBC,QAAzB,CAAmC,CAC/B,GAAMC,CAAAA,cAAc,CAAG,CACnBC,MAAM,CAAE,MADW,CAEnBC,OAAO,CAAE,CAAE,eAAgB,kBAAlB,CAFU,CAGnBC,IAAI,CAAEhB,IAAI,CAACiB,SAAL,CAAe,CAAEN,QAAQ,CAARA,QAAF,CAAYC,QAAQ,CAARA,QAAZ,CAAf,CAHa,CAAvB,CAMA,MAAOM,CAAAA,KAAK,uBAAwBL,cAAxB,CAAL,CACFM,IADE,CACGrB,cADH,EAEFqB,IAFE,CAEG,SAAAC,IAAI,CAAI,CACV;AACAlB,YAAY,CAACmB,OAAb,CAAqB,aAArB,CAAoCrB,IAAI,CAACiB,SAAL,CAAeG,IAAf,CAApC,EACArB,kBAAkB,CAACuB,IAAnB,CAAwBF,IAAxB,EAEA,MAAOA,CAAAA,IAAP,CACH,CARE,CAAP,CASH,CAED,QAASd,CAAAA,MAAT,EAAkB,CACd;AACAJ,YAAY,CAACqB,UAAb,CAAwB,aAAxB,EACAxB,kBAAkB,CAACuB,IAAnB,CAAwB,IAAxB,EACH","sourcesContent":["import { BehaviorSubject } from 'rxjs';\n\n\nimport { handleResponse } from '../_helpers';\n\nconst currentUserSubject = new BehaviorSubject(JSON.parse(localStorage.getItem('currentUser')));\n\nexport const authenticationService = {\n    login,\n    logout,\n    currentUser: currentUserSubject.asObservable(),\n    get currentUserValue () { return currentUserSubject.value }\n};\n\nfunction login(username, password) {\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ username, password })\n    };\n\n    return fetch(`/users/authenticate`, requestOptions)\n        .then(handleResponse)\n        .then(user => {\n            // store user details and jwt token in local storage to keep user logged in between page refreshes\n            localStorage.setItem('currentUser', JSON.stringify(user));\n            currentUserSubject.next(user);\n\n            return user;\n        });\n}\n\nfunction logout() {\n    // remove user from local storage to log user out\n    localStorage.removeItem('currentUser');\n    currentUserSubject.next(null);\n}\n"]},"metadata":{},"sourceType":"module"}