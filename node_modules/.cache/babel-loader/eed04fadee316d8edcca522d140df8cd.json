{"ast":null,"code":"import { authenticationService } from '../_services';\nconst pathname = this.props.location.pathname;\nexport function handleResponse(response) {\n  return response.text().then(text => {\n    const data = text && JSON.parse(text);\n\n    if (!response.ok) {\n      if ([401, 403].indexOf(response.status) !== -1) {\n        // auto logout if 401 Unauthorized or 403 Forbidden response returned from api\n        authenticationService.logout();\n        let path = pathname;\n        path.reload(true);\n      }\n\n      const error = data && data.message || response.statusText;\n      return Promise.reject(error);\n    }\n\n    return data;\n  });\n}","map":{"version":3,"sources":["C:/xampp/htdocs/react/login/src/_helpers/handle-response.js"],"names":["authenticationService","pathname","props","location","handleResponse","response","text","then","data","JSON","parse","ok","indexOf","status","logout","path","reload","error","message","statusText","Promise","reject"],"mappings":"AAAA,SAASA,qBAAT,QAAsC,cAAtC;MAGgBC,Q,GACV,KAAKC,K,CADPC,Q,CAAYF,Q;AAGhB,OAAO,SAASG,cAAT,CAAwBC,QAAxB,EAAkC;AACrC,SAAOA,QAAQ,CAACC,IAAT,GAAgBC,IAAhB,CAAqBD,IAAI,IAAI;AAChC,UAAME,IAAI,GAAGF,IAAI,IAAIG,IAAI,CAACC,KAAL,CAAWJ,IAAX,CAArB;;AACA,QAAI,CAACD,QAAQ,CAACM,EAAd,EAAkB;AACd,UAAI,CAAC,GAAD,EAAM,GAAN,EAAWC,OAAX,CAAmBP,QAAQ,CAACQ,MAA5B,MAAwC,CAAC,CAA7C,EAAgD;AAC5C;AACAb,QAAAA,qBAAqB,CAACc,MAAtB;AACA,YAAIC,IAAI,GAAGd,QAAX;AACAc,QAAAA,IAAI,CAACC,MAAL,CAAY,IAAZ;AACH;;AAED,YAAMC,KAAK,GAAIT,IAAI,IAAIA,IAAI,CAACU,OAAd,IAA0Bb,QAAQ,CAACc,UAAjD;AACA,aAAOC,OAAO,CAACC,MAAR,CAAeJ,KAAf,CAAP;AACH;;AAED,WAAOT,IAAP;AACH,GAfM,CAAP;AAgBH","sourcesContent":["import { authenticationService } from '../_services';\n\nconst {\n    location: { pathname },\n  } = this.props;\n  \nexport function handleResponse(response) {\n    return response.text().then(text => {\n        const data = text && JSON.parse(text);\n        if (!response.ok) {\n            if ([401, 403].indexOf(response.status) !== -1) {\n                // auto logout if 401 Unauthorized or 403 Forbidden response returned from api\n                authenticationService.logout();\n                let path = pathname;\n                path.reload(true);\n            }\n\n            const error = (data && data.message) || response.statusText;\n            return Promise.reject(error);\n        }\n\n        return data;\n    });\n}"]},"metadata":{},"sourceType":"module"}